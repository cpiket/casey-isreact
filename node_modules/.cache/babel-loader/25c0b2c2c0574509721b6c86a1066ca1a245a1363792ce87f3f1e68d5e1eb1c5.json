{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport InstantSearch, { INSTANTSEARCH_FUTURE_DEFAULTS } from \"instantsearch.js/es/lib/InstantSearch.js\";\nimport { useCallback, useRef, version as ReactVersion } from 'react';\nimport { useSyncExternalStore } from \"use-sync-external-store/shim/index.js\";\nimport version from \"../version.js\";\nimport { dequal } from \"./dequal.js\";\nimport { useForceUpdate } from \"./useForceUpdate.js\";\nimport { useInstantSearchServerContext } from \"./useInstantSearchServerContext.js\";\nimport { useInstantSearchSSRContext } from \"./useInstantSearchSSRContext.js\";\nimport { useRSCContext } from \"./useRSCContext.js\";\nimport { warn } from \"./warn.js\";\nvar defaultUserAgents = [\"react (\".concat(ReactVersion, \")\"), \"react-instantsearch (\".concat(version, \")\"), \"react-instantsearch-core (\".concat(version, \")\")];\nvar serverUserAgent = \"react-instantsearch-server (\".concat(version, \")\");\nvar nextUserAgent = function nextUserAgent(nextVersion) {\n  return nextVersion ? \"next.js (\".concat(nextVersion, \")\") : null;\n};\nexport function useInstantSearchApi(props) {\n  var forceUpdate = useForceUpdate();\n  var serverContext = useInstantSearchServerContext();\n  var serverState = useInstantSearchSSRContext();\n  var waitingForResultsRef = useRSCContext();\n  var initialResults = serverState === null || serverState === void 0 ? void 0 : serverState.initialResults;\n  var prevPropsRef = useRef(props);\n  var shouldRenderAtOnce = serverContext || initialResults || waitingForResultsRef;\n  var searchRef = useRef(null);\n  // As we need to render on mount with SSR, using the local ref above in `StrictMode` will\n  // create and start two instances of InstantSearch. To avoid this, we instead discard it and use\n  // an upward ref from `InstantSearchSSRContext` as it has already been mounted a second time at this point.\n  if (serverState) {\n    searchRef = serverState.ssrSearchRef;\n  }\n  if (searchRef.current === null) {\n    // We don't use the `instantsearch()` function because it comes with other\n    // top-level APIs that we don't need.\n    // See https://github.com/algolia/instantsearch/blob/5b529f43d8acc680f85837eaaa41f7fd03a3f833/src/index.es.ts#L63-L86\n    var search = new InstantSearch(props);\n    search._schedule = function _schedule(cb) {\n      search._schedule.queue.push(cb);\n      clearTimeout(search._schedule.timer);\n      search._schedule.timer = setTimeout(function () {\n        search._schedule.queue.forEach(function (callback) {\n          callback();\n        });\n        search._schedule.queue = [];\n      }, 0);\n    };\n    search._schedule.queue = [];\n    if (shouldRenderAtOnce) {\n      // InstantSearch.js has a private Initial Results API that lets us inject\n      // results on the search instance.\n      // On the server, we default the initial results to an empty object so that\n      // InstantSearch.js doesn't schedule a search that isn't used, leading to\n      // an additional network request. (This is equivalent to monkey-patching\n      // `scheduleSearch` to a noop.)\n      search._initialResults = initialResults || {};\n    }\n    addAlgoliaAgents(props.searchClient, [].concat(defaultUserAgents, [serverContext && serverUserAgent, nextUserAgent(getNextVersion())]));\n\n    // On the server, we start the search early to compute the search parameters.\n    // On SSR, we start the search early to directly catch up with the lifecycle\n    // and render.\n    if (shouldRenderAtOnce) {\n      search.start();\n    }\n    if (serverContext) {\n      // We notify `getServerState()` of the InstantSearch internals to retrieve\n      // the server state and pass it to the render on SSR.\n      serverContext.notifyServer({\n        search: search\n      });\n    }\n    warnNextRouter(props.routing);\n    warnNextAppDir(Boolean(waitingForResultsRef));\n    searchRef.current = search;\n  }\n  {\n    var _search = searchRef.current;\n    var prevProps = prevPropsRef.current;\n    if (prevProps.indexName !== props.indexName) {\n      _search.helper.setIndex(props.indexName || '').search();\n      prevPropsRef.current = props;\n    }\n    if (prevProps.searchClient !== props.searchClient) {\n      process.env.NODE_ENV === 'development' ? warn(false, 'The `searchClient` prop of `<InstantSearch>` changed between renders, which may cause more search requests than necessary. If this is an unwanted behavior, please provide a stable reference: https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/#widget-param-searchclient') : void 0;\n      addAlgoliaAgents(props.searchClient, [].concat(defaultUserAgents, [serverContext && serverUserAgent]));\n      _search.mainHelper.setClient(props.searchClient).search();\n      prevPropsRef.current = props;\n    }\n    if (prevProps.onStateChange !== props.onStateChange) {\n      _search.onStateChange = props.onStateChange;\n      prevPropsRef.current = props;\n    }\n    if (prevProps.searchFunction !== props.searchFunction) {\n      // Updating the `searchFunction` to `undefined` is not supported by\n      // InstantSearch.js, so it will throw an error.\n      // This is a fair behavior until we add an update API in InstantSearch.js.\n      _search._searchFunction = props.searchFunction;\n      prevPropsRef.current = props;\n    }\n    if (prevProps.stalledSearchDelay !== props.stalledSearchDelay) {\n      var _props$stalledSearchD;\n      // The default `stalledSearchDelay` in InstantSearch.js is 200ms.\n      // We need to reset it when it's undefined to get back to the original value.\n      _search._stalledSearchDelay = (_props$stalledSearchD = props.stalledSearchDelay) !== null && _props$stalledSearchD !== void 0 ? _props$stalledSearchD : 200;\n      prevPropsRef.current = props;\n    }\n    if (!dequal(prevProps.future, props.future)) {\n      _search.future = _objectSpread(_objectSpread({}, INSTANTSEARCH_FUTURE_DEFAULTS), props.future);\n      prevPropsRef.current = props;\n    }\n\n    // Updating the `routing` prop is not supported because InstantSearch.js\n    // doesn't let us change it. This might not be a problem though, because `routing`\n    // shouldn't need to be dynamic.\n    // If we find scenarios where `routing` needs to change, we can always expose\n    // it privately on the InstantSearch instance. Another way would be to\n    // manually inject the routing middleware in this library, and not rely\n    // on the provided `routing` prop.\n  }\n  var cleanupTimerRef = useRef(null);\n  var store = useSyncExternalStore(useCallback(function () {\n    var search = searchRef.current;\n\n    // Scenario 1: the component mounts.\n    if (cleanupTimerRef.current === null) {\n      // On SSR, the instance is already started so we don't start it again.\n      if (!search.started) {\n        search.start();\n        forceUpdate();\n      }\n    }\n    // Scenario 2: the component updates.\n    else {\n      // We cancel the previous cleanup function because we don't want to\n      // dispose the search during an update.\n      clearTimeout(cleanupTimerRef.current);\n      search._preventWidgetCleanup = false;\n    }\n    return function () {\n      function cleanup() {\n        search.dispose();\n      }\n      clearTimeout(search._schedule.timer);\n      // We clean up only when the component that uses this subscription unmounts,\n      // but not when it updates, because it would dispose the instance, which\n      // would remove all the widgets and break routing.\n      // Executing the cleanup function in a `setTimeout()` lets us cancel it\n      // in the next effect.\n      // (There might be better ways to do this.)\n      cleanupTimerRef.current = setTimeout(cleanup);\n\n      // We need to prevent the `useWidget` cleanup function so that widgets\n      // are not removed before the instance is disposed, triggering\n      // an unwanted search request.\n      search._preventWidgetCleanup = true;\n    };\n  }, [forceUpdate]), function () {\n    return searchRef.current;\n  }, function () {\n    return searchRef.current;\n  });\n  return store;\n}\nfunction addAlgoliaAgents(searchClient, userAgents) {\n  if (typeof searchClient.addAlgoliaAgent !== 'function') {\n    return;\n  }\n  userAgents.filter(Boolean).forEach(function (userAgent) {\n    searchClient.addAlgoliaAgent(userAgent);\n  });\n}\nfunction warnNextRouter(routing) {\n  if (process.env.NODE_ENV === 'development') {\n    var _routing$router;\n    if (!routing || typeof window === 'undefined' || !('__NEXT_DATA__' in window)) {\n      return;\n    }\n    var isUsingNextRouter =\n    // @ts-expect-error: _isNextRouter is only set on the Next.js router\n    routing !== true && (routing === null || routing === void 0 ? void 0 : (_routing$router = routing.router) === null || _routing$router === void 0 ? void 0 : _routing$router._isNextRouter);\n    process.env.NODE_ENV === 'development' ? warn(isUsingNextRouter, \"\\nYou are using Next.js with InstantSearch without the \\\"react-instantsearch-router-nextjs\\\" package.\\nThis package is recommended to make the routing work correctly with Next.js.\\nPlease check its usage instructions: https://github.com/algolia/instantsearch/tree/master/packages/react-instantsearch-router-nextjs\\n\\nYou can ignore this warning if you are using a custom router that suits your needs, it won't be outputted in production builds.\") : void 0;\n  }\n}\nfunction warnNextAppDir(isRscContextDefined) {\n  var _next;\n  if (!(process.env.NODE_ENV === 'development') || typeof window === 'undefined' || isRscContextDefined) {\n    return;\n  }\n  process.env.NODE_ENV === 'development' ? warn(Boolean((_next = window.next) === null || _next === void 0 ? void 0 : _next.appDir) === false, \"\\nWe've detected you are using Next.js with the App Router.\\nWe released an **experimental** package called \\\"react-instantsearch-nextjs\\\" that makes SSR work with the App Router.\\nPlease check its usage instructions: https://www.algolia.com/doc/guides/building-search-ui/going-further/server-side-rendering/react/#with-nextjs\\n\\nThis warning will not be outputted in production builds.\") : void 0;\n}\n\n/**\n * Gets the version of Next.js if it is available in the `window` object,\n * otherwise it returns the NEXT_RUNTIME environment variable (in SSR),\n * which is either `nodejs` or `edge`.\n */\nfunction getNextVersion() {\n  var _next2, _process$env;\n  return typeof window !== 'undefined' && ((_next2 = window.next) === null || _next2 === void 0 ? void 0 : _next2.version) || (typeof process !== 'undefined' ? (_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env.NEXT_RUNTIME : undefined);\n}","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","toPrimitive","call","TypeError","Number","InstantSearch","INSTANTSEARCH_FUTURE_DEFAULTS","useCallback","useRef","version","ReactVersion","useSyncExternalStore","dequal","useForceUpdate","useInstantSearchServerContext","useInstantSearchSSRContext","useRSCContext","warn","defaultUserAgents","concat","serverUserAgent","nextUserAgent","nextVersion","useInstantSearchApi","props","forceUpdate","serverContext","serverState","waitingForResultsRef","initialResults","prevPropsRef","shouldRenderAtOnce","searchRef","ssrSearchRef","current","search","_schedule","cb","queue","clearTimeout","timer","setTimeout","callback","_initialResults","addAlgoliaAgents","searchClient","getNextVersion","start","notifyServer","warnNextRouter","routing","warnNextAppDir","Boolean","_search","prevProps","indexName","helper","setIndex","process","env","NODE_ENV","mainHelper","setClient","onStateChange","searchFunction","_searchFunction","stalledSearchDelay","_props$stalledSearchD","_stalledSearchDelay","future","cleanupTimerRef","store","started","_preventWidgetCleanup","cleanup","dispose","userAgents","addAlgoliaAgent","userAgent","_routing$router","window","isUsingNextRouter","router","_isNextRouter","isRscContextDefined","_next","next","appDir","_next2","_process$env","NEXT_RUNTIME","undefined"],"sources":["/Users/caseypiket/Desktop/Projects/casey-isreact/node_modules/react-instantsearch-core/dist/es/lib/useInstantSearchApi.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport InstantSearch, { INSTANTSEARCH_FUTURE_DEFAULTS } from \"instantsearch.js/es/lib/InstantSearch.js\";\nimport { useCallback, useRef, version as ReactVersion } from 'react';\nimport { useSyncExternalStore } from \"use-sync-external-store/shim/index.js\";\nimport version from \"../version.js\";\nimport { dequal } from \"./dequal.js\";\nimport { useForceUpdate } from \"./useForceUpdate.js\";\nimport { useInstantSearchServerContext } from \"./useInstantSearchServerContext.js\";\nimport { useInstantSearchSSRContext } from \"./useInstantSearchSSRContext.js\";\nimport { useRSCContext } from \"./useRSCContext.js\";\nimport { warn } from \"./warn.js\";\nvar defaultUserAgents = [\"react (\".concat(ReactVersion, \")\"), \"react-instantsearch (\".concat(version, \")\"), \"react-instantsearch-core (\".concat(version, \")\")];\nvar serverUserAgent = \"react-instantsearch-server (\".concat(version, \")\");\nvar nextUserAgent = function nextUserAgent(nextVersion) {\n  return nextVersion ? \"next.js (\".concat(nextVersion, \")\") : null;\n};\nexport function useInstantSearchApi(props) {\n  var forceUpdate = useForceUpdate();\n  var serverContext = useInstantSearchServerContext();\n  var serverState = useInstantSearchSSRContext();\n  var waitingForResultsRef = useRSCContext();\n  var initialResults = serverState === null || serverState === void 0 ? void 0 : serverState.initialResults;\n  var prevPropsRef = useRef(props);\n  var shouldRenderAtOnce = serverContext || initialResults || waitingForResultsRef;\n  var searchRef = useRef(null);\n  // As we need to render on mount with SSR, using the local ref above in `StrictMode` will\n  // create and start two instances of InstantSearch. To avoid this, we instead discard it and use\n  // an upward ref from `InstantSearchSSRContext` as it has already been mounted a second time at this point.\n  if (serverState) {\n    searchRef = serverState.ssrSearchRef;\n  }\n  if (searchRef.current === null) {\n    // We don't use the `instantsearch()` function because it comes with other\n    // top-level APIs that we don't need.\n    // See https://github.com/algolia/instantsearch/blob/5b529f43d8acc680f85837eaaa41f7fd03a3f833/src/index.es.ts#L63-L86\n    var search = new InstantSearch(props);\n    search._schedule = function _schedule(cb) {\n      search._schedule.queue.push(cb);\n      clearTimeout(search._schedule.timer);\n      search._schedule.timer = setTimeout(function () {\n        search._schedule.queue.forEach(function (callback) {\n          callback();\n        });\n        search._schedule.queue = [];\n      }, 0);\n    };\n    search._schedule.queue = [];\n    if (shouldRenderAtOnce) {\n      // InstantSearch.js has a private Initial Results API that lets us inject\n      // results on the search instance.\n      // On the server, we default the initial results to an empty object so that\n      // InstantSearch.js doesn't schedule a search that isn't used, leading to\n      // an additional network request. (This is equivalent to monkey-patching\n      // `scheduleSearch` to a noop.)\n      search._initialResults = initialResults || {};\n    }\n    addAlgoliaAgents(props.searchClient, [].concat(defaultUserAgents, [serverContext && serverUserAgent, nextUserAgent(getNextVersion())]));\n\n    // On the server, we start the search early to compute the search parameters.\n    // On SSR, we start the search early to directly catch up with the lifecycle\n    // and render.\n    if (shouldRenderAtOnce) {\n      search.start();\n    }\n    if (serverContext) {\n      // We notify `getServerState()` of the InstantSearch internals to retrieve\n      // the server state and pass it to the render on SSR.\n      serverContext.notifyServer({\n        search: search\n      });\n    }\n    warnNextRouter(props.routing);\n    warnNextAppDir(Boolean(waitingForResultsRef));\n    searchRef.current = search;\n  }\n  {\n    var _search = searchRef.current;\n    var prevProps = prevPropsRef.current;\n    if (prevProps.indexName !== props.indexName) {\n      _search.helper.setIndex(props.indexName || '').search();\n      prevPropsRef.current = props;\n    }\n    if (prevProps.searchClient !== props.searchClient) {\n      process.env.NODE_ENV === 'development' ? warn(false, 'The `searchClient` prop of `<InstantSearch>` changed between renders, which may cause more search requests than necessary. If this is an unwanted behavior, please provide a stable reference: https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/#widget-param-searchclient') : void 0;\n      addAlgoliaAgents(props.searchClient, [].concat(defaultUserAgents, [serverContext && serverUserAgent]));\n      _search.mainHelper.setClient(props.searchClient).search();\n      prevPropsRef.current = props;\n    }\n    if (prevProps.onStateChange !== props.onStateChange) {\n      _search.onStateChange = props.onStateChange;\n      prevPropsRef.current = props;\n    }\n    if (prevProps.searchFunction !== props.searchFunction) {\n      // Updating the `searchFunction` to `undefined` is not supported by\n      // InstantSearch.js, so it will throw an error.\n      // This is a fair behavior until we add an update API in InstantSearch.js.\n      _search._searchFunction = props.searchFunction;\n      prevPropsRef.current = props;\n    }\n    if (prevProps.stalledSearchDelay !== props.stalledSearchDelay) {\n      var _props$stalledSearchD;\n      // The default `stalledSearchDelay` in InstantSearch.js is 200ms.\n      // We need to reset it when it's undefined to get back to the original value.\n      _search._stalledSearchDelay = (_props$stalledSearchD = props.stalledSearchDelay) !== null && _props$stalledSearchD !== void 0 ? _props$stalledSearchD : 200;\n      prevPropsRef.current = props;\n    }\n    if (!dequal(prevProps.future, props.future)) {\n      _search.future = _objectSpread(_objectSpread({}, INSTANTSEARCH_FUTURE_DEFAULTS), props.future);\n      prevPropsRef.current = props;\n    }\n\n    // Updating the `routing` prop is not supported because InstantSearch.js\n    // doesn't let us change it. This might not be a problem though, because `routing`\n    // shouldn't need to be dynamic.\n    // If we find scenarios where `routing` needs to change, we can always expose\n    // it privately on the InstantSearch instance. Another way would be to\n    // manually inject the routing middleware in this library, and not rely\n    // on the provided `routing` prop.\n  }\n  var cleanupTimerRef = useRef(null);\n  var store = useSyncExternalStore(useCallback(function () {\n    var search = searchRef.current;\n\n    // Scenario 1: the component mounts.\n    if (cleanupTimerRef.current === null) {\n      // On SSR, the instance is already started so we don't start it again.\n      if (!search.started) {\n        search.start();\n        forceUpdate();\n      }\n    }\n    // Scenario 2: the component updates.\n    else {\n      // We cancel the previous cleanup function because we don't want to\n      // dispose the search during an update.\n      clearTimeout(cleanupTimerRef.current);\n      search._preventWidgetCleanup = false;\n    }\n    return function () {\n      function cleanup() {\n        search.dispose();\n      }\n      clearTimeout(search._schedule.timer);\n      // We clean up only when the component that uses this subscription unmounts,\n      // but not when it updates, because it would dispose the instance, which\n      // would remove all the widgets and break routing.\n      // Executing the cleanup function in a `setTimeout()` lets us cancel it\n      // in the next effect.\n      // (There might be better ways to do this.)\n      cleanupTimerRef.current = setTimeout(cleanup);\n\n      // We need to prevent the `useWidget` cleanup function so that widgets\n      // are not removed before the instance is disposed, triggering\n      // an unwanted search request.\n      search._preventWidgetCleanup = true;\n    };\n  }, [forceUpdate]), function () {\n    return searchRef.current;\n  }, function () {\n    return searchRef.current;\n  });\n  return store;\n}\nfunction addAlgoliaAgents(searchClient, userAgents) {\n  if (typeof searchClient.addAlgoliaAgent !== 'function') {\n    return;\n  }\n  userAgents.filter(Boolean).forEach(function (userAgent) {\n    searchClient.addAlgoliaAgent(userAgent);\n  });\n}\nfunction warnNextRouter(routing) {\n  if (process.env.NODE_ENV === 'development') {\n    var _routing$router;\n    if (!routing || typeof window === 'undefined' || !('__NEXT_DATA__' in window)) {\n      return;\n    }\n    var isUsingNextRouter =\n    // @ts-expect-error: _isNextRouter is only set on the Next.js router\n    routing !== true && (routing === null || routing === void 0 ? void 0 : (_routing$router = routing.router) === null || _routing$router === void 0 ? void 0 : _routing$router._isNextRouter);\n    process.env.NODE_ENV === 'development' ? warn(isUsingNextRouter, \"\\nYou are using Next.js with InstantSearch without the \\\"react-instantsearch-router-nextjs\\\" package.\\nThis package is recommended to make the routing work correctly with Next.js.\\nPlease check its usage instructions: https://github.com/algolia/instantsearch/tree/master/packages/react-instantsearch-router-nextjs\\n\\nYou can ignore this warning if you are using a custom router that suits your needs, it won't be outputted in production builds.\") : void 0;\n  }\n}\nfunction warnNextAppDir(isRscContextDefined) {\n  var _next;\n  if (!(process.env.NODE_ENV === 'development') || typeof window === 'undefined' || isRscContextDefined) {\n    return;\n  }\n  process.env.NODE_ENV === 'development' ? warn(Boolean((_next = window.next) === null || _next === void 0 ? void 0 : _next.appDir) === false, \"\\nWe've detected you are using Next.js with the App Router.\\nWe released an **experimental** package called \\\"react-instantsearch-nextjs\\\" that makes SSR work with the App Router.\\nPlease check its usage instructions: https://www.algolia.com/doc/guides/building-search-ui/going-further/server-side-rendering/react/#with-nextjs\\n\\nThis warning will not be outputted in production builds.\") : void 0;\n}\n\n/**\n * Gets the version of Next.js if it is available in the `window` object,\n * otherwise it returns the NEXT_RUNTIME environment variable (in SSR),\n * which is either `nodejs` or `edge`.\n */\nfunction getNextVersion() {\n  var _next2, _process$env;\n  return typeof window !== 'undefined' && ((_next2 = window.next) === null || _next2 === void 0 ? void 0 : _next2.version) || (typeof process !== 'undefined' ? (_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env.NEXT_RUNTIME : undefined);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}