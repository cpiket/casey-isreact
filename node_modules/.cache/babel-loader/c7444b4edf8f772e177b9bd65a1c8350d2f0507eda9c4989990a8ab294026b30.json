{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nimport { getInsightsAnonymousUserTokenInternal } from \"../helpers/index.js\";\nimport { warning, noop, getAppIdAndApiKey, find, safelyRunOnBrowser } from \"../lib/utils/index.js\";\nimport { createUUID } from \"../lib/utils/uuid.js\";\nvar ALGOLIA_INSIGHTS_VERSION = '2.17.2';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nexport function createInsightsMiddleware() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _insightsClient = props.insightsClient,\n    insightsInitParams = props.insightsInitParams,\n    onEvent = props.onEvent,\n    _props$$$internal = props.$$internal,\n    $$internal = _props$$$internal === void 0 ? false : _props$$$internal,\n    _props$$$automatic = props.$$automatic,\n    $$automatic = _props$$$automatic === void 0 ? false : _props$$$automatic;\n  var potentialInsightsClient = _insightsClient;\n  if (!_insightsClient && _insightsClient !== null) {\n    safelyRunOnBrowser(function (_ref) {\n      var window = _ref.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        potentialInsightsClient = window[pointer];\n      }\n      if (!potentialInsightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n          window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n          window[pointer].shouldAddScript = true;\n        }\n        potentialInsightsClient = window[pointer];\n      }\n    });\n  }\n  // if still no insightsClient was found, we use a noop\n  var insightsClient = potentialInsightsClient || noop;\n  return function (_ref2) {\n    var instantSearchInstance = _ref2.instantSearchInstance;\n    // remove existing default insights middleware\n    // user-provided insights middleware takes precedence\n    var existingInsightsMiddlewares = instantSearchInstance.middleware.filter(function (m) {\n      return m.instance.$$type === 'ais.insights' && m.instance.$$internal;\n    }).map(function (m) {\n      return m.creator;\n    });\n    instantSearchInstance.unuse.apply(instantSearchInstance, _toConsumableArray(existingInsightsMiddlewares));\n    var _getAppIdAndApiKey = getAppIdAndApiKey(instantSearchInstance.client),\n      _getAppIdAndApiKey2 = _slicedToArray(_getAppIdAndApiKey, 2),\n      appId = _getAppIdAndApiKey2[0],\n      apiKey = _getAppIdAndApiKey2[1];\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    process.env.NODE_ENV === 'development' ? warning(Boolean(appId && apiKey), 'could not extract Algolia credentials from searchClient in insights middleware.') : void 0;\n    var queuedInitParams = undefined;\n    var queuedUserToken = undefined;\n    var userTokenBeforeInit = undefined;\n    var queue = insightsClient.queue;\n    if (Array.isArray(queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      var _map = ['setUserToken', 'init'].map(function (key) {\n        var _ref3 = find(queue.slice().reverse(), function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 1),\n              method = _ref6[0];\n            return method === key;\n          }) || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n      var _map2 = _slicedToArray(_map, 2);\n      queuedUserToken = _map2[0];\n      queuedInitParams = _map2[1];\n    }\n\n    // If user called `aa('setUserToken')` before creating the Insights middleware,\n    // we temporarily store the token and set it later on.\n    //\n    // Otherwise, the `init` call might override them with anonymous user token.\n    insightsClient('getUserToken', null, function (_error, userToken) {\n      userTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    // Only `init` if the `insightsInitParams` option is passed or\n    // if the `insightsClient` version doesn't supports optional `init` calling.\n    if (insightsInitParams || !isModernInsightsClient(insightsClient)) {\n      insightsClient('init', _objectSpread({\n        appId: appId,\n        apiKey: apiKey,\n        partial: true\n      }, insightsInitParams));\n    }\n    var initialParameters;\n    var helper;\n    return {\n      $$type: 'ais.insights',\n      $$internal: $$internal,\n      $$automatic: $$automatic,\n      onStateChange: function onStateChange() {},\n      subscribe: function subscribe() {\n        if (!insightsClient.shouldAddScript) return;\n        var errorMessage = '[insights middleware]: could not load search-insights.js. Please load it manually following https://alg.li/insights-init';\n        try {\n          var script = document.createElement('script');\n          script.async = true;\n          script.src = ALGOLIA_INSIGHTS_SRC;\n          script.onerror = function () {\n            instantSearchInstance.emit('error', new Error(errorMessage));\n          };\n          document.body.appendChild(script);\n          insightsClient.shouldAddScript = false;\n        } catch (cause) {\n          insightsClient.shouldAddScript = false;\n          instantSearchInstance.emit('error', new Error(errorMessage));\n        }\n      },\n      started: function started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n        helper = instantSearchInstance.mainHelper;\n        var queueAtStart = insightsClient.queue;\n        if (Array.isArray(queueAtStart)) {\n          var _map3 = ['setUserToken', 'init'].map(function (key) {\n            var _ref7 = find(queueAtStart.slice().reverse(), function (_ref9) {\n                var _ref10 = _slicedToArray(_ref9, 1),\n                  method = _ref10[0];\n                return method === key;\n              }) || [],\n              _ref8 = _slicedToArray(_ref7, 2),\n              value = _ref8[1];\n            return value;\n          });\n          var _map4 = _slicedToArray(_map3, 2);\n          queuedUserToken = _map4[0];\n          queuedInitParams = _map4[1];\n        }\n        initialParameters = getInitialParameters(instantSearchInstance);\n\n        // We don't want to force clickAnalytics when the insights is enabled from the search response.\n        // This means we don't enable insights for indices that don't opt in\n        if (!$$automatic) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n            clickAnalytics: true\n          }));\n        }\n        if (!$$internal) {\n          instantSearchInstance.scheduleSearch();\n        }\n        var setUserTokenToSearch = function setUserTokenToSearch(userToken) {\n          var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var normalizedUserToken = normalizeUserToken(userToken);\n          if (!normalizedUserToken) {\n            return;\n          }\n          var existingToken = helper.state.userToken;\n          function applyToken() {\n            helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n              userToken: normalizedUserToken\n            }));\n            if (existingToken && existingToken !== userToken) {\n              instantSearchInstance.scheduleSearch();\n            }\n          }\n\n          // Delay the token application to the next render cycle\n          if (!immediate) {\n            setTimeout(applyToken, 0);\n          } else {\n            applyToken();\n          }\n        };\n        function setUserToken(token) {\n          setUserTokenToSearch(token, true);\n          insightsClient('setUserToken', token);\n        }\n        var anonymousUserToken = undefined;\n        var anonymousTokenFromInsights = getInsightsAnonymousUserTokenInternal();\n        if (anonymousTokenFromInsights) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken on instantsearch and insights. If it's not set as an insights\n          // userToken before a sendEvent, insights automatically generates a new anonymous token,\n          // causing a state change and an unnecessary query on instantsearch.\n          anonymousUserToken = anonymousTokenFromInsights;\n        } else {\n          var token = \"anonymous-\".concat(createUUID());\n          anonymousUserToken = token;\n        }\n        var userTokenFromInit;\n\n        // With SSR, the token could be be set on the state. We make sure\n        // that insights is in sync with that token since, there is no\n        // insights lib on the server.\n        var tokenFromSearchParameters = initialParameters.userToken;\n\n        // When the first query is sent, the token is possibly not yet set by\n        // the insights onChange callbacks (if insights isn't yet loaded).\n        // It is explicitly being set here so that the first query has the\n        // initial tokens set and ensure a second query isn't automatically\n        // made when the onChange callback actually changes the state.\n        if (insightsInitParams !== null && insightsInitParams !== void 0 && insightsInitParams.userToken) {\n          userTokenFromInit = insightsInitParams.userToken;\n        }\n        if (userTokenFromInit) {\n          setUserToken(userTokenFromInit);\n        } else if (tokenFromSearchParameters) {\n          setUserToken(tokenFromSearchParameters);\n        } else if (userTokenBeforeInit) {\n          setUserToken(userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          setUserToken(queuedUserToken);\n        } else if (anonymousUserToken) {\n          var _queuedInitParams;\n          setUserToken(anonymousUserToken);\n          if (insightsInitParams !== null && insightsInitParams !== void 0 && insightsInitParams.useCookie || (_queuedInitParams = queuedInitParams) !== null && _queuedInitParams !== void 0 && _queuedInitParams.useCookie) {\n            var _queuedInitParams2;\n            saveTokenAsCookie(anonymousUserToken, (insightsInitParams === null || insightsInitParams === void 0 ? void 0 : insightsInitParams.cookieDuration) || ((_queuedInitParams2 = queuedInitParams) === null || _queuedInitParams2 === void 0 ? void 0 : _queuedInitParams2.cookieDuration));\n          }\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', function (token) {\n          return setUserTokenToSearch(token, true);\n        }, {\n          immediate: true\n        });\n        var insightsClientWithLocalCredentials = insightsClient;\n        if (isModernInsightsClient(insightsClient)) {\n          insightsClientWithLocalCredentials = function insightsClientWithLocalCredentials(method, payload) {\n            var extraParams = {\n              headers: {\n                'X-Algolia-Application-Id': appId,\n                'X-Algolia-API-Key': apiKey\n              }\n            };\n\n            // @ts-ignore we are calling this only when we know that the client actually is correct\n            return insightsClient(method, payload, extraParams);\n          };\n        }\n        var viewedObjectIDs = new Set();\n        var lastQueryId;\n        instantSearchInstance.mainHelper.derivedHelpers[0].on('result', function (_ref11) {\n          var results = _ref11.results;\n          if (results && (!results.queryID || results.queryID !== lastQueryId)) {\n            lastQueryId = results.queryID;\n            viewedObjectIDs.clear();\n          }\n        });\n        instantSearchInstance.sendEventToInsights = function (event) {\n          if (onEvent) {\n            onEvent(event, insightsClientWithLocalCredentials);\n          } else if (event.insightsMethod) {\n            if (event.insightsMethod === 'viewedObjectIDs') {\n              var _payload = event.payload;\n              var difference = _payload.objectIDs.filter(function (objectID) {\n                return !viewedObjectIDs.has(objectID);\n              });\n              if (difference.length === 0) {\n                return;\n              }\n              difference.forEach(function (objectID) {\n                return viewedObjectIDs.add(objectID);\n              });\n              _payload.objectIDs = difference;\n            }\n\n            // Source is used to differentiate events sent by instantsearch from those sent manually.\n            event.payload.algoliaSource = ['instantsearch'];\n            if ($$automatic) {\n              event.payload.algoliaSource.push('instantsearch-automatic');\n            }\n            if (event.eventModifier === 'internal') {\n              event.payload.algoliaSource.push('instantsearch-internal');\n            }\n            insightsClientWithLocalCredentials(event.insightsMethod, event.payload);\n            process.env.NODE_ENV === 'development' ? warning(Boolean(helper.state.userToken), \"\\nCannot send event to Algolia Insights because `userToken` is not set.\\n\\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\\n\") : void 0;\n          } else {\n            process.env.NODE_ENV === 'development' ? warning(false, 'Cannot send event to Algolia Insights because `insightsMethod` option is missing.') : void 0;\n          }\n        };\n      },\n      unsubscribe: function unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), initialParameters));\n          instantSearchInstance.scheduleSearch();\n        }\n      }\n    };\n  };\n}\nfunction getInitialParameters(instantSearchInstance) {\n  var _instantSearchInstanc, _instantSearchInstanc2;\n  // in SSR, the initial state we use in this domain is set on the main index\n  var stateFromInitialResults = ((_instantSearchInstanc = instantSearchInstance._initialResults) === null || _instantSearchInstanc === void 0 ? void 0 : (_instantSearchInstanc2 = _instantSearchInstanc[instantSearchInstance.indexName]) === null || _instantSearchInstanc2 === void 0 ? void 0 : _instantSearchInstanc2.state) || {};\n  var stateFromHelper = instantSearchInstance.mainHelper.state;\n  return {\n    userToken: stateFromInitialResults.userToken || stateFromHelper.userToken,\n    clickAnalytics: stateFromInitialResults.clickAnalytics || stateFromHelper.clickAnalytics\n  };\n}\nfunction saveTokenAsCookie(token, cookieDuration) {\n  var MONTH = 30 * 24 * 60 * 60 * 1000;\n  var d = new Date();\n  d.setTime(d.getTime() + (cookieDuration || MONTH * 6));\n  var expires = \"expires=\".concat(d.toUTCString());\n  document.cookie = \"_ALGOLIA=\".concat(token, \";\").concat(expires, \";path=/\");\n}\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  var v3 = major >= 3;\n  var v2_6 = major === 2 && minor >= 6;\n  var v1_10 = major === 1 && minor >= 10;\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return v3 || v2_6 || v1_10;\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken) {\n  if (!userToken) {\n    return undefined;\n  }\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","toPrimitive","call","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","l","n","u","a","f","next","done","return","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","from","test","iter","len","arr2","getInsightsAnonymousUserTokenInternal","warning","noop","getAppIdAndApiKey","find","safelyRunOnBrowser","createUUID","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","concat","createInsightsMiddleware","props","undefined","_insightsClient","insightsClient","insightsInitParams","onEvent","_props$$$internal","$$internal","_props$$$automatic","$$automatic","potentialInsightsClient","_ref","window","pointer","AlgoliaAnalyticsObject","queue","_len","args","_key","version","shouldAddScript","_ref2","instantSearchInstance","existingInsightsMiddlewares","middleware","m","instance","$$type","map","creator","unuse","_getAppIdAndApiKey","client","_getAppIdAndApiKey2","appId","apiKey","process","env","NODE_ENV","Boolean","queuedInitParams","queuedUserToken","userTokenBeforeInit","_map","_ref3","reverse","_ref5","_ref6","method","_ref4","_map2","_error","userToken","normalizeUserToken","isModernInsightsClient","partial","initialParameters","helper","onStateChange","subscribe","errorMessage","script","document","createElement","async","src","onerror","emit","Error","body","appendChild","cause","started","mainHelper","queueAtStart","_map3","_ref7","_ref9","_ref10","_ref8","_map4","getInitialParameters","overrideStateWithoutTriggeringChangeEvent","state","clickAnalytics","scheduleSearch","setUserTokenToSearch","immediate","normalizedUserToken","existingToken","applyToken","setTimeout","setUserToken","token","anonymousUserToken","anonymousTokenFromInsights","userTokenFromInit","tokenFromSearchParameters","_queuedInitParams","useCookie","_queuedInitParams2","saveTokenAsCookie","cookieDuration","insightsClientWithLocalCredentials","payload","extraParams","headers","viewedObjectIDs","Set","lastQueryId","derivedHelpers","on","_ref11","results","queryID","clear","sendEventToInsights","event","insightsMethod","_payload","difference","objectIDs","objectID","has","add","algoliaSource","eventModifier","unsubscribe","_instantSearchInstanc","_instantSearchInstanc2","stateFromInitialResults","_initialResults","indexName","stateFromHelper","MONTH","d","Date","setTime","getTime","expires","toUTCString","cookie","_split$map","split","_split$map2","major","minor","v3","v2_6","v1_10"],"sources":["/Users/caseypiket/Desktop/Projects/casey-isreact/node_modules/instantsearch.js/es/middlewares/createInsightsMiddleware.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { getInsightsAnonymousUserTokenInternal } from \"../helpers/index.js\";\nimport { warning, noop, getAppIdAndApiKey, find, safelyRunOnBrowser } from \"../lib/utils/index.js\";\nimport { createUUID } from \"../lib/utils/uuid.js\";\nvar ALGOLIA_INSIGHTS_VERSION = '2.17.2';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nexport function createInsightsMiddleware() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _insightsClient = props.insightsClient,\n    insightsInitParams = props.insightsInitParams,\n    onEvent = props.onEvent,\n    _props$$$internal = props.$$internal,\n    $$internal = _props$$$internal === void 0 ? false : _props$$$internal,\n    _props$$$automatic = props.$$automatic,\n    $$automatic = _props$$$automatic === void 0 ? false : _props$$$automatic;\n  var potentialInsightsClient = _insightsClient;\n  if (!_insightsClient && _insightsClient !== null) {\n    safelyRunOnBrowser(function (_ref) {\n      var window = _ref.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        potentialInsightsClient = window[pointer];\n      }\n      if (!potentialInsightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n          window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n          window[pointer].shouldAddScript = true;\n        }\n        potentialInsightsClient = window[pointer];\n      }\n    });\n  }\n  // if still no insightsClient was found, we use a noop\n  var insightsClient = potentialInsightsClient || noop;\n  return function (_ref2) {\n    var instantSearchInstance = _ref2.instantSearchInstance;\n    // remove existing default insights middleware\n    // user-provided insights middleware takes precedence\n    var existingInsightsMiddlewares = instantSearchInstance.middleware.filter(function (m) {\n      return m.instance.$$type === 'ais.insights' && m.instance.$$internal;\n    }).map(function (m) {\n      return m.creator;\n    });\n    instantSearchInstance.unuse.apply(instantSearchInstance, _toConsumableArray(existingInsightsMiddlewares));\n    var _getAppIdAndApiKey = getAppIdAndApiKey(instantSearchInstance.client),\n      _getAppIdAndApiKey2 = _slicedToArray(_getAppIdAndApiKey, 2),\n      appId = _getAppIdAndApiKey2[0],\n      apiKey = _getAppIdAndApiKey2[1];\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    process.env.NODE_ENV === 'development' ? warning(Boolean(appId && apiKey), 'could not extract Algolia credentials from searchClient in insights middleware.') : void 0;\n    var queuedInitParams = undefined;\n    var queuedUserToken = undefined;\n    var userTokenBeforeInit = undefined;\n    var queue = insightsClient.queue;\n    if (Array.isArray(queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      var _map = ['setUserToken', 'init'].map(function (key) {\n        var _ref3 = find(queue.slice().reverse(), function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 1),\n              method = _ref6[0];\n            return method === key;\n          }) || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n      var _map2 = _slicedToArray(_map, 2);\n      queuedUserToken = _map2[0];\n      queuedInitParams = _map2[1];\n    }\n\n    // If user called `aa('setUserToken')` before creating the Insights middleware,\n    // we temporarily store the token and set it later on.\n    //\n    // Otherwise, the `init` call might override them with anonymous user token.\n    insightsClient('getUserToken', null, function (_error, userToken) {\n      userTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    // Only `init` if the `insightsInitParams` option is passed or\n    // if the `insightsClient` version doesn't supports optional `init` calling.\n    if (insightsInitParams || !isModernInsightsClient(insightsClient)) {\n      insightsClient('init', _objectSpread({\n        appId: appId,\n        apiKey: apiKey,\n        partial: true\n      }, insightsInitParams));\n    }\n    var initialParameters;\n    var helper;\n    return {\n      $$type: 'ais.insights',\n      $$internal: $$internal,\n      $$automatic: $$automatic,\n      onStateChange: function onStateChange() {},\n      subscribe: function subscribe() {\n        if (!insightsClient.shouldAddScript) return;\n        var errorMessage = '[insights middleware]: could not load search-insights.js. Please load it manually following https://alg.li/insights-init';\n        try {\n          var script = document.createElement('script');\n          script.async = true;\n          script.src = ALGOLIA_INSIGHTS_SRC;\n          script.onerror = function () {\n            instantSearchInstance.emit('error', new Error(errorMessage));\n          };\n          document.body.appendChild(script);\n          insightsClient.shouldAddScript = false;\n        } catch (cause) {\n          insightsClient.shouldAddScript = false;\n          instantSearchInstance.emit('error', new Error(errorMessage));\n        }\n      },\n      started: function started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n        helper = instantSearchInstance.mainHelper;\n        var queueAtStart = insightsClient.queue;\n        if (Array.isArray(queueAtStart)) {\n          var _map3 = ['setUserToken', 'init'].map(function (key) {\n            var _ref7 = find(queueAtStart.slice().reverse(), function (_ref9) {\n                var _ref10 = _slicedToArray(_ref9, 1),\n                  method = _ref10[0];\n                return method === key;\n              }) || [],\n              _ref8 = _slicedToArray(_ref7, 2),\n              value = _ref8[1];\n            return value;\n          });\n          var _map4 = _slicedToArray(_map3, 2);\n          queuedUserToken = _map4[0];\n          queuedInitParams = _map4[1];\n        }\n        initialParameters = getInitialParameters(instantSearchInstance);\n\n        // We don't want to force clickAnalytics when the insights is enabled from the search response.\n        // This means we don't enable insights for indices that don't opt in\n        if (!$$automatic) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n            clickAnalytics: true\n          }));\n        }\n        if (!$$internal) {\n          instantSearchInstance.scheduleSearch();\n        }\n        var setUserTokenToSearch = function setUserTokenToSearch(userToken) {\n          var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var normalizedUserToken = normalizeUserToken(userToken);\n          if (!normalizedUserToken) {\n            return;\n          }\n          var existingToken = helper.state.userToken;\n          function applyToken() {\n            helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n              userToken: normalizedUserToken\n            }));\n            if (existingToken && existingToken !== userToken) {\n              instantSearchInstance.scheduleSearch();\n            }\n          }\n\n          // Delay the token application to the next render cycle\n          if (!immediate) {\n            setTimeout(applyToken, 0);\n          } else {\n            applyToken();\n          }\n        };\n        function setUserToken(token) {\n          setUserTokenToSearch(token, true);\n          insightsClient('setUserToken', token);\n        }\n        var anonymousUserToken = undefined;\n        var anonymousTokenFromInsights = getInsightsAnonymousUserTokenInternal();\n        if (anonymousTokenFromInsights) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken on instantsearch and insights. If it's not set as an insights\n          // userToken before a sendEvent, insights automatically generates a new anonymous token,\n          // causing a state change and an unnecessary query on instantsearch.\n          anonymousUserToken = anonymousTokenFromInsights;\n        } else {\n          var token = \"anonymous-\".concat(createUUID());\n          anonymousUserToken = token;\n        }\n        var userTokenFromInit;\n\n        // With SSR, the token could be be set on the state. We make sure\n        // that insights is in sync with that token since, there is no\n        // insights lib on the server.\n        var tokenFromSearchParameters = initialParameters.userToken;\n\n        // When the first query is sent, the token is possibly not yet set by\n        // the insights onChange callbacks (if insights isn't yet loaded).\n        // It is explicitly being set here so that the first query has the\n        // initial tokens set and ensure a second query isn't automatically\n        // made when the onChange callback actually changes the state.\n        if (insightsInitParams !== null && insightsInitParams !== void 0 && insightsInitParams.userToken) {\n          userTokenFromInit = insightsInitParams.userToken;\n        }\n        if (userTokenFromInit) {\n          setUserToken(userTokenFromInit);\n        } else if (tokenFromSearchParameters) {\n          setUserToken(tokenFromSearchParameters);\n        } else if (userTokenBeforeInit) {\n          setUserToken(userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          setUserToken(queuedUserToken);\n        } else if (anonymousUserToken) {\n          var _queuedInitParams;\n          setUserToken(anonymousUserToken);\n          if (insightsInitParams !== null && insightsInitParams !== void 0 && insightsInitParams.useCookie || (_queuedInitParams = queuedInitParams) !== null && _queuedInitParams !== void 0 && _queuedInitParams.useCookie) {\n            var _queuedInitParams2;\n            saveTokenAsCookie(anonymousUserToken, (insightsInitParams === null || insightsInitParams === void 0 ? void 0 : insightsInitParams.cookieDuration) || ((_queuedInitParams2 = queuedInitParams) === null || _queuedInitParams2 === void 0 ? void 0 : _queuedInitParams2.cookieDuration));\n          }\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', function (token) {\n          return setUserTokenToSearch(token, true);\n        }, {\n          immediate: true\n        });\n        var insightsClientWithLocalCredentials = insightsClient;\n        if (isModernInsightsClient(insightsClient)) {\n          insightsClientWithLocalCredentials = function insightsClientWithLocalCredentials(method, payload) {\n            var extraParams = {\n              headers: {\n                'X-Algolia-Application-Id': appId,\n                'X-Algolia-API-Key': apiKey\n              }\n            };\n\n            // @ts-ignore we are calling this only when we know that the client actually is correct\n            return insightsClient(method, payload, extraParams);\n          };\n        }\n        var viewedObjectIDs = new Set();\n        var lastQueryId;\n        instantSearchInstance.mainHelper.derivedHelpers[0].on('result', function (_ref11) {\n          var results = _ref11.results;\n          if (results && (!results.queryID || results.queryID !== lastQueryId)) {\n            lastQueryId = results.queryID;\n            viewedObjectIDs.clear();\n          }\n        });\n        instantSearchInstance.sendEventToInsights = function (event) {\n          if (onEvent) {\n            onEvent(event, insightsClientWithLocalCredentials);\n          } else if (event.insightsMethod) {\n            if (event.insightsMethod === 'viewedObjectIDs') {\n              var _payload = event.payload;\n              var difference = _payload.objectIDs.filter(function (objectID) {\n                return !viewedObjectIDs.has(objectID);\n              });\n              if (difference.length === 0) {\n                return;\n              }\n              difference.forEach(function (objectID) {\n                return viewedObjectIDs.add(objectID);\n              });\n              _payload.objectIDs = difference;\n            }\n\n            // Source is used to differentiate events sent by instantsearch from those sent manually.\n            event.payload.algoliaSource = ['instantsearch'];\n            if ($$automatic) {\n              event.payload.algoliaSource.push('instantsearch-automatic');\n            }\n            if (event.eventModifier === 'internal') {\n              event.payload.algoliaSource.push('instantsearch-internal');\n            }\n            insightsClientWithLocalCredentials(event.insightsMethod, event.payload);\n            process.env.NODE_ENV === 'development' ? warning(Boolean(helper.state.userToken), \"\\nCannot send event to Algolia Insights because `userToken` is not set.\\n\\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\\n\") : void 0;\n          } else {\n            process.env.NODE_ENV === 'development' ? warning(false, 'Cannot send event to Algolia Insights because `insightsMethod` option is missing.') : void 0;\n          }\n        };\n      },\n      unsubscribe: function unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), initialParameters));\n          instantSearchInstance.scheduleSearch();\n        }\n      }\n    };\n  };\n}\nfunction getInitialParameters(instantSearchInstance) {\n  var _instantSearchInstanc, _instantSearchInstanc2;\n  // in SSR, the initial state we use in this domain is set on the main index\n  var stateFromInitialResults = ((_instantSearchInstanc = instantSearchInstance._initialResults) === null || _instantSearchInstanc === void 0 ? void 0 : (_instantSearchInstanc2 = _instantSearchInstanc[instantSearchInstance.indexName]) === null || _instantSearchInstanc2 === void 0 ? void 0 : _instantSearchInstanc2.state) || {};\n  var stateFromHelper = instantSearchInstance.mainHelper.state;\n  return {\n    userToken: stateFromInitialResults.userToken || stateFromHelper.userToken,\n    clickAnalytics: stateFromInitialResults.clickAnalytics || stateFromHelper.clickAnalytics\n  };\n}\nfunction saveTokenAsCookie(token, cookieDuration) {\n  var MONTH = 30 * 24 * 60 * 60 * 1000;\n  var d = new Date();\n  d.setTime(d.getTime() + (cookieDuration || MONTH * 6));\n  var expires = \"expires=\".concat(d.toUTCString());\n  document.cookie = \"_ALGOLIA=\".concat(token, \";\").concat(expires, \";path=/\");\n}\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  var v3 = major >= 3;\n  var v2_6 = major === 2 && minor >= 6;\n  var v1_10 = major === 1 && minor >= 10;\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return v3 || v2_6 || v1_10;\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken) {\n  if (!userToken) {\n    return undefined;\n  }\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}